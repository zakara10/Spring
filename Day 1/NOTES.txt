Day1
-----
Spring Framework
-----------------
Lets split these words
Framework--->
semi developed code which can be customized to build 	 
our application.Here we get some ready made code to develop ,
we do not have to start coding from scratch

we acheive RAD[Rapid application development] using framework

Spring---->season where new leaves grow & flowers bloom
	   indicates a beginning of new season
_____________________________________________________________

console-based application
desktop/GUI application(swing)
web-based application
Enterprise Application

Examples of Web Applications
-----------------------------
facebook--->social networking
gmail,yahoo,hotmail---->email
flipkart,amazon--->shopping
irctc--->train booking
makemytrip-->tourism

but when we consider
seed infotech app(huge)----->many submodules
register,feedback,batchschedule,exam,placements,leave,payroll

Enterprise Application
----------------------
overcomplex bcz it has a lot submodules
tremendous business logic,plumbing code
To develop Enterprise Application,java proposals
  1)JavaBean:-too simple 
  2)EJB[Enterprise Java Bean]:-overcomplex,requires server
  3)Spring	
_____________________________________________________________
Defination:-
----------
Spring is a Java framework used to develop Enterprise application

Spring handles the infrastructure so you can focus on your application development

Spring Framework was originated by Rod Johnson in June 2003 

Spring mission
	"Spring simplifies java development"
_____________________________________________________________
Spring simplifies java development by employing these
foundational ideas:-

1)POJO based development
--------------------------
A class not dependent on any API,server or architecture is called as a POJO.
we acheive pluggability/maintainability
_____________________________________________________________

2)DI-Dependency Injection
--------------------------
The process of supplying dependencies to a software component automatically is called as DI

when writing a complex java application,application classes should be as independent as possible of other Java classes to increase the possibility to reuse these classes &  to test them independently of other classes while doing unit testing

DI helps in gluing these classes together & same time keeping them independent

What is Dependency Injection? Lets seperate these words
Dependency ------>means association between 2 classes  
eg:class A is dependent on class B

Injection ----->class B will get injected into class A by Spring

DI can happen in the way of passing parameters to the ctor or by using setter methods.
Example:-
//we need to create application classes
//Dependency object
class Address{
	street,city,state,country
}

//Dependant object
class Customer{
	custId,custName;
	Address resAddr;

}

Customer cust=container.getBean("e");


//this will be done by spring fw[DI]
Address ad=new Address(....);   //create dependency
Customer e=new Customer();
e.setResAddr(ad);      
//inject dependency into the dependent object using setter injection

or
Address ad=new Address(....);   //create dependency
Customer e=new Customer(101,"John",ad);
   //inject dependency into the dependent object using ctor injection


***Spring takes the responsibility of creating the application objects & injecting the dependencies in it automatically using DI.
_____________________________________________________________

3)Declarative Programming
  ------------------------ 
In Declarative Programming,programmer provides metadata thro xml or annotation & framework executes the appln accordingly

_____________________________________________________________

4)AOP-Aspect Oriented Programming [seperation of concerns]
  --------------------------------
There is some logic which is common for all BL/functions
eg:-transaction,exception,socket,logging,security,encrytion,
compression

seperation of Business logic from infrastructural activities
[preprocssing code/post-processing code] is known as AOP

we acheive modularity /seperation of logics
High Cohesion-extent to which a class has wellfocus/single logic

Example:-
class P{Txn code}  //infrastructural activity

@Transactional
class B{BL}

@Transactional
class C{BL}

@Transactional
class D{BL}
_____________________________________________________________

5)Templates
  ----------
Using Templates,redundant/repetitive code is autogenerated
hence source code is reduced

In spring we have JdbcTemplate ...
we just have to pass sql query to it & it will autogenerate jdbc code for us

 using HibernateTemplate ...
sessionfactory,session,txn objects are autogenerated 

___________________________________________________________